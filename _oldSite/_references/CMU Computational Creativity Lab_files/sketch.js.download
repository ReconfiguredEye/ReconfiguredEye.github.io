let img;
let imgs = [];
let msg = "click to view work";
let counter = 0;
let checker = 0;
let description;
let cv;
let mouse_pos = [];
let bgColor = '#04200c';
let moving = 0; 
let mouseMove = 0;
function preload() {
}



function setup() {
  cv = createCanvas(displayWidth, displayHeight);
  cv.parent("bg");
  strokeCap(ROUND);
  strokeJoin(ROUND);
}


function draw() {
  
  //line
  if(windowWidth<800) ss = 800;
  else ss = windowWidth;

  if(mouseMove>0 || mouse_pos.length>2){
    clear(); 
    noFill();
    stroke(color('#8ea996'));
    strokeWeight(ss*.08);
    beginShape();
    for(let i=0; i<mouse_pos.length; i++){ 
      curveVertex(mouse_pos[i].x, mouse_pos[i].y);
    }
    endShape();
    stroke(color(bgColor));
    strokeWeight(ss*.08-2);
    beginShape();
    for(let i=0; i<mouse_pos.length; i++){ 
      curveVertex(mouse_pos[i].x, mouse_pos[i].y);
    }
    endShape();

    push();
    if(mouse_pos.length<=2){
       noFill();
        stroke(color('#888'));
        strokeWeight(ss*.08);
        beginShape();
        for(let i=0; i<2; i++){ 
          curveVertex(mouse_pos[0].x, mouse_pos[0].y);
        }
        endShape();
        stroke(color(bgColor));
        strokeWeight(ss*.08-2);
        beginShape();
        for(let i=0; i<2; i++){ 
          curveVertex(mouse_pos[0].x, mouse_pos[0].y);
        }
        endShape();
    }
    pop();
    if(frameCount%2==0 && mouse_pos.length>2) {
        mouse_pos.splice(0, 1);
    }
  }

  if(mouseMove>0) {
    mouseMove--;
  }
}

function mouseMoved() {
  let ci = document.getElementById('contact_img');
  ci.style.transform = 'rotateY('+map(mouseX, 0, width, -35, 35)+'deg) rotateX('+map(mouseY, 0, height, -28, 28)+'deg)';

  if(mouse_pos.length<80) {
    mouse_pos.push(createVector(mouseX, mouseY));
  }  
  mouseMove = 100;
}

function work() {
  val = "w";
  fill(255, 0, 0);
}

function people() {
  val = "p";
}

function contact() {
  val = "c";
  fill(0, 0, 255);
}

function mousePressed() {
  checker = 1;
}

function mouseReleased() {
  checker = 0;
  counter++;
}
